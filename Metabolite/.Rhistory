strains <- read.csv("strains_in_mega.csv")
strains <- strains[!is.na(strains$taxid),]
strains <- strains[(strains$taxid != ""),]
nrow(strains)
strains$taxid <- as.numeric(strains$taxid)
strains[!grepl("^\\d+$", strains$taxid), ]
item<- strains
exp <- read.csv("exp_info.csv")
head(exp)
strains <- left_join(strains,exp,by = "taxonomy")
library(dyplyr)
library(dplyr)
strains <- read.csv("strains_in_mega.csv")
strains <- strains[!is.na(strains$taxid),]
strains <- strains[(strains$taxid != ""),]
nrow(strains)
strains$taxid <- as.numeric(strains$taxid)
strains[!grepl("^\\d+$", strains$taxid), ]
item<- strains
exp <- read.csv("exp_info.csv")
head(exp)
strains <- left_join(strains,exp,by = "taxonomy")
strains<-select(strains, c("taxonomy","taxid","exp_id","grouped_taxonomy"))
head(strains)
nrow(distinct(strains,taxonomy))
# 157
count_fold_dmrvf <- read.csv("count_is.csv")
chemicals <- read.csv("chemicals.csv")
chemicals <- chemicals[,c("dname","Compound","inchikey")]
options(scipen = 999)
options(digits = 7)
# onlyn read 4 cols
count_fold_dmrvf <- select(count_fold_dmrvf, c("exp_id",chemicals$dname))
nrow(distinct(count_fold_dmrvf, exp_id))
nrow(distinct(strains, exp_id))
# strains[is.na(strains$exp_id), ]  10 rows
# result_left_join <- left_join(strains, count_fold_dmrvf, by = "exp_id")
# result_inner_join <- strains %>% inner_join(count_fold_dmrvf, by = "exp_id")
# difference_left <- anti_join(result_left_join, result_inner_join, by = "exp_id")
columns_to_max <- chemicals$dname
# "m_c18p_0046" "m_c18p_0112" "m_c18p_0038" "m_c18n_0283"
strains %>% left_join(count_fold_dmrvf, by = "exp_id") -> meta_strains
result <- meta_strains %>%
group_by(taxonomy) %>%
summarize(across(all_of(columns_to_max), ~if(all(is.na(.))) NA_real_ else max(., na.rm = TRUE)))
print(result)
missing<-strains %>%  anti_join(result, by = "taxonomy") # no unmatch result
item_short <- left_join(item, result,by="taxonomy") %>% .[,(ncol(.)-4):ncol(.)] # taxid and four compounds
compound_values <- chemicals[chemicals$dname %in% colnames(item_short)[2:5], "Compound"]
# compound_values <- paste(compound_values, "_AVG", sep = "")
colnames(item_short)[2:5] <- compound_values
item_short$taxid <- as.numeric(item_short$taxid)
View(item_short)
# Linear function normalization
nor_min_max=function(x){
y=na.omit(x)
return((x - min(y))/(max(y) - min(y)))
}
#  Min-Max normalization
item_short[, -1] <- lapply(item_short[, -1], nor_min_max)
fold_dat <- reshape2::melt(item_short,na.rm = FALSE, measure.vars=c("PUTRESCINE","AGMATINE","ORNITHINE","CITRULLINE"),variable.name = "Metabolite",value.name = "foldchange_abundance")
# raw_dat$raw_abundance <- format(raw_dat$raw_abundance, scientific = FALSE)
fold_dat[fold_dat == "NaN"] <- NA
raw_anno <- read.csv("input/iphylo_tree_items_for_anno.csv")
raw_anno <- read.csv("iphylo_tree_items_for_anno.csv")
head(raw_anno)
head(fold_dat)
# final annotation data
anno_dat<- left_join(raw_anno, fold_dat, by="taxid")
# anno_2[is.nan(anno_2)] <- NA
head(anno_dat)
# label to show
anno_dat$Manual_label <- ifelse(anno_dat$foldchange_abundance > 0.095, anno_dat$id, NA)
anno_dat <- anno_dat %>%
group_by(id) %>%
mutate(Manual_label = ifelse(all(is.na(Manual_label)), NA, Manual_label[!is.na(Manual_label)][1]))
# final output tree_anno_leaf.csv
write.csv(anno_dat, "tree_anno_leaf_is.csv", row.names = F, na = "")
```{r setup, include=FALSE}
library(dplyr)
library(dplyr)
data_path <- "metadata.csv"
taxonomy_path <- "taxonomy.csv"
# data: the amount of corresponding compounds for each species
data <- read.csv(data_path, check.names = F)
# taxonomy: species taxonomic data with name and taxid
taxonomy <- read.csv(taxonomy_path, check.names = F)
head(data)
# join metabolites and taxonomy data
data <- left_join(data, taxonomy, by = "taxonomy")
# get taxids to make tree by iPhylo CLI
write.csv(data$strain_taxid, "strain_taxid.csv",row.names = F, col.names = F)
## make strain_taxid the first
strain_taxid <- data$strain_taxid
# remove column "strain_taxid"
data <- data[, -which(names(data) == "strain_taxid")]
# instert column "strain_taxid" to the first column
data <- data.frame(strain_taxid, data[,1:ncol(data)], check.names = F)
colnames(data)[1] <- "taxid"
# anno: origin CSV file output by iPhylo CLI
anno <- read.csv("iphylo_tree_items_for_anno.csv")
anno$taxid <- as.numeric(anno$taxid)
data$taxid <- as.numeric(data$taxid)
anno_2 <- left_join(anno, data, by="taxid")
# remove redundant
anno_2 <- anno_2[, 1:which(names(anno_2)=="genus.y")-1]
# chemical tree
nodes <- read.csv("node_info.csv", check.names = F)
all_chemical_items <- read.csv("all_chemical_items.csv", check.names = F)
node_info_joined <- left_join(nodes, all_chemical_items, by="id")
# chemical tree
nodes <- read.csv("node_info.csv", check.names = F)
all_chemical_items <- read.csv("all_chemical_items.csv", check.names = F)
node_info_joined <- left_join(nodes, all_chemical_items, by="id")
chemical_tab <- readxl::read_xlsx("Supplementary_Table_1_mz-rt_library.xlsx")
compound_name_inchikey_map <- data.frame(chemical_tab$Compound, chemical_tab$inchikey)
colnames(compound_name_inchikey_map)[2] <- "inchikey"
node_info_joined <- left_join(node_info_joined, compound_name_inchikey_map, by="inchikey")
node_info_joined <- distinct(node_info_joined)
# sort
compound_order <- node_info_joined$chemical_tab.Compound
# 1-12: basic info
columns_to_order <- colnames(anno_2)[12:length(colnames(anno_2))]
# sort by columns_order
anno_2 <- anno_2[, c("id", "taxid", "domain", "kingdom.x", "phylum.x", "class.x", "order.x", "family.x", "genus.x", "species.x", "taxonomy", intersect(compound_order, columns_to_order))]
# print
# tail(colnames(anno_2), 200)
anno_1d_heatmap <- reshape2::melt(anno_2,na.rm = FALSE, measure.vars=colnames(anno_2[,12:ncol(anno_2)]),variable.name = "Metabolites",value.name = "Abundance")
anno_1d_heatmap[anno_1d_heatmap == "NA"] <- NA
# replace NA Abundance with value 0
anno_1d_heatmap$Abundance[is.na(anno_1d_heatmap$Abundance)] <- 0
# annotation_leaf output
write.csv(anno_1d_heatmap, "tree_anno_leaf.csv",row.names = F, na="NA")
